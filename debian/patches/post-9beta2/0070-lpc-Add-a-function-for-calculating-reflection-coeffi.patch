From 39ef66f5300c2a42acc29937f5417bc2efe09752 Mon Sep 17 00:00:00 2001
From: Justin Ruggles <justin.ruggles@gmail.com>
Date: Sat, 27 Oct 2012 22:29:56 +0300
Subject: [PATCH 070/278] lpc: Add a function for calculating reflection
 coefficients from autocorrelation coefficients
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Martin Storsj√∂ <martin@martin.st>
---
 libavcodec/lpc.h |   31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)

diff --git a/libavcodec/lpc.h b/libavcodec/lpc.h
index cbee46f..0e54f0d 100644
--- a/libavcodec/lpc.h
+++ b/libavcodec/lpc.h
@@ -111,6 +111,37 @@ void ff_lpc_end(LPCContext *s);
 #endif
 
 /**
+ * Schur recursion.
+ * Produces reflection coefficients from autocorrelation data.
+ */
+static inline void compute_ref_coefs(const LPC_TYPE *autoc, int max_order,
+                                     LPC_TYPE *ref, LPC_TYPE *error)
+{
+    int i, j;
+    LPC_TYPE err;
+    LPC_TYPE gen0[MAX_LPC_ORDER], gen1[MAX_LPC_ORDER];
+
+    for (i = 0; i < max_order; i++)
+        gen0[i] = gen1[i] = autoc[i + 1];
+
+    err    = autoc[0];
+    ref[0] = -gen1[0] / err;
+    err   +=  gen1[0] * ref[0];
+    if (error)
+        error[0] = err;
+    for (i = 1; i < max_order; i++) {
+        for (j = 0; j < max_order - i; j++) {
+            gen1[j] = gen1[j + 1] + ref[i - 1] * gen0[j];
+            gen0[j] = gen1[j + 1] * ref[i - 1] + gen0[j];
+        }
+        ref[i] = -gen1[0] / err;
+        err   +=  gen1[0] * ref[i];
+        if (error)
+            error[i] = err;
+    }
+}
+
+/**
  * Levinson-Durbin recursion.
  * Produce LPC coefficients from autocorrelation data.
  */
-- 
1.7.9.5

